
I2C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001c2  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000a4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  000001c2  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000058  00000000  00000000  000001f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000b74  00000000  00000000  00000249  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000007db  00000000  00000000  00000dbd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000032e  00000000  00000000  00001598  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000094  00000000  00000000  000018c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000027d  00000000  00000000  0000195c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000009f  00000000  00000000  00001bd9  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000048  00000000  00000000  00001c78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  0000016a  0000016a  000001be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001cc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.I2C_Master_Init 00000018  000000fe  000000fe  00000152  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.I2C_Start 00000010  00000152  00000152  000001a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.I2C_SlaveWrite 00000016  00000116  00000116  0000016a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.I2C_SendMessage 00000014  0000012c  0000012c  00000180  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.I2C_Stop 00000008  00000162  00000162  000001b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.I2C_MasterTransmit 0000005a  000000a4  000000a4  000000f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.main    00000012  00000140  00000140  00000194  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
   8:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
   c:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  10:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  14:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  18:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  1c:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  20:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  24:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  28:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  2c:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  30:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  34:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  38:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  3c:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  40:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  44:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  48:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  4c:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  50:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  54:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  58:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  5c:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  60:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  64:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  68:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  6c:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  70:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  74:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  78:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  7c:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  80:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  84:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>
  88:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	0e 94 a0 00 	call	0x140	; 0x140 <main>
  9c:	0c 94 50 00 	jmp	0xa0	; 0xa0 <_exit>

000000a0 <_exit>:
  a0:	f8 94       	cli

000000a2 <__stop_program>:
  a2:	ff cf       	rjmp	.-2      	; 0xa2 <__stop_program>

Disassembly of section .text:

0000016a <__bad_interrupt>:
 16a:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.I2C_Master_Init:

000000fe <I2C_Master_Init>:
	
	TWDR=slavAdr<<1|1<<0;
	TWCR=(1<<TWEN)|(1<<TWINT);
	while(!(TWCR & (1<<TWINT)));
	
}
  fe:	88 0f       	add	r24, r24
 100:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__TEXT_REGION_LENGTH__+0x7e0072>
 104:	84 e0       	ldi	r24, 0x04	; 4
 106:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 10a:	10 92 71 00 	sts	0x0071, r1	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
 10e:	8c e0       	ldi	r24, 0x0C	; 12
 110:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 114:	08 95       	ret

Disassembly of section .text.I2C_Start:

00000152 <I2C_Start>:
 152:	84 ea       	ldi	r24, 0xA4	; 164
 154:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 158:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 15c:	88 23       	and	r24, r24
 15e:	e4 f7       	brge	.-8      	; 0x158 <I2C_Start+0x6>
 160:	08 95       	ret

Disassembly of section .text.I2C_SlaveWrite:

00000116 <I2C_SlaveWrite>:
 116:	88 0f       	add	r24, r24
 118:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 11c:	84 ec       	ldi	r24, 0xC4	; 196
 11e:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 122:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 126:	88 23       	and	r24, r24
 128:	e4 f7       	brge	.-8      	; 0x122 <I2C_SlaveWrite+0xc>
 12a:	08 95       	ret

Disassembly of section .text.I2C_SendMessage:

0000012c <I2C_SendMessage>:
 12c:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
 130:	84 e8       	ldi	r24, 0x84	; 132
 132:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 136:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 13a:	88 23       	and	r24, r24
 13c:	e4 f7       	brge	.-8      	; 0x136 <I2C_SendMessage+0xa>
 13e:	08 95       	ret

Disassembly of section .text.I2C_Stop:

00000162 <I2C_Stop>:
void I2C_Stop(){
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
 162:	84 e9       	ldi	r24, 0x94	; 148
 164:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 168:	08 95       	ret

Disassembly of section .text.I2C_MasterTransmit:

000000a4 <I2C_MasterTransmit>:
	
	TWDR=slavAdr<<1|1<<0;
	TWCR=(1<<TWEN)|(1<<TWINT);
	while(!(TWCR & (1<<TWINT)));
	
}
  a4:	0e 94 a9 00 	call	0x152	; 0x152 <I2C_Start>
  a8:	e1 e7       	ldi	r30, 0x71	; 113
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	20 81       	ld	r18, Z
  ae:	90 81       	ld	r25, Z
  b0:	28 7f       	andi	r18, 0xF8	; 248
  b2:	31 e0       	ldi	r19, 0x01	; 1
  b4:	20 31       	cpi	r18, 0x10	; 16
  b6:	09 f0       	breq	.+2      	; 0xba <I2C_MasterTransmit+0x16>
  b8:	30 e0       	ldi	r19, 0x00	; 0
  ba:	98 7f       	andi	r25, 0xF8	; 248
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	98 30       	cpi	r25, 0x08	; 8
  c0:	09 f0       	breq	.+2      	; 0xc4 <I2C_MasterTransmit+0x20>
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	83 2b       	or	r24, r19
  c6:	21 f0       	breq	.+8      	; 0xd0 <I2C_MasterTransmit+0x2c>
  c8:	82 e0       	ldi	r24, 0x02	; 2
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	0e 94 8b 00 	call	0x116	; 0x116 <I2C_SlaveWrite>
  d0:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
  d4:	88 7f       	andi	r24, 0xF8	; 248
  d6:	88 31       	cpi	r24, 0x18	; 24
  d8:	19 f4       	brne	.+6      	; 0xe0 <I2C_MasterTransmit+0x3c>
  da:	84 e6       	ldi	r24, 0x64	; 100
  dc:	0e 94 96 00 	call	0x12c	; 0x12c <I2C_SendMessage>
  e0:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7e0071>
  e4:	88 7f       	andi	r24, 0xF8	; 248
  e6:	88 32       	cpi	r24, 0x28	; 40
  e8:	31 f4       	brne	.+12     	; 0xf6 <I2C_MasterTransmit+0x52>
  ea:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
  ee:	83 32       	cpi	r24, 0x23	; 35
  f0:	29 f0       	breq	.+10     	; 0xfc <I2C_MasterTransmit+0x58>
  f2:	0e 94 b1 00 	call	0x162	; 0x162 <I2C_Stop>
  f6:	0e 94 b1 00 	call	0x162	; 0x162 <I2C_Stop>
  fa:	d6 cf       	rjmp	.-84     	; 0xa8 <I2C_MasterTransmit+0x4>
  fc:	08 95       	ret

Disassembly of section .text.main:

00000140 <main>:
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	0e 94 7f 00 	call	0xfe	; 0xfe <I2C_Master_Init>
 148:	0e 94 52 00 	call	0xa4	; 0xa4 <__data_load_end>
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	08 95       	ret
